DROP DATABASE IF EXISTS GEEKBRAINS_INTERNSHIP_15_1_DB;
CREATE DATABASE GEEKBRAINS_INTERNSHIP_15_1_DB;

USE GEEKBRAINS_INTERNSHIP_15_1_DB;
DROP TABLE IF EXISTS PERSONS;
CREATE TABLE PERSONS(
  ID INT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  NAME NVARCHAR(2048) NOT NULL
);

USE GEEKBRAINS_INTERNSHIP_15_1_DB;
DROP TABLE IF EXISTS SITES;
CREATE TABLE SITES(
  ID INT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  NAME NVARCHAR(256) NOT NULL
);

USE GEEKBRAINS_INTERNSHIP_15_1_DB;
DROP TABLE IF EXISTS KEYWORDS;
CREATE TABLE KEYWORDS(
  ID INT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  NAME NVARCHAR(2048) NOT NULL,
  PERSONID INT,
  CONSTRAINT fk_persons FOREIGN KEY (PERSONID) REFERENCES PERSONS(ID)
);

USE GEEKBRAINS_INTERNSHIP_15_1_DB;
DROP TABLE IF EXISTS PAGES;
CREATE TABLE PAGES(
  ID INT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  URL NVARCHAR(2048) NOT NULL,
  SITEID INT,
  FOUND datetime NOT NULL,
  LASTSCAN datetime NOT NULL,
  CONSTRAINT fk_sites FOREIGN KEY (SITEID) REFERENCES SITES(ID)
);

USE GEEKBRAINS_INTERNSHIP_15_1_DB;
DROP TABLE IF EXISTS PERSON_PAGE_RANK;
CREATE TABLE PERSON_PAGE_RANK(
  ID INT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  PERSONID INT,
  PAGEID INT,
  RANK SMALLINT NOT NULL,
  CONSTRAINT fk_pages_rank FOREIGN KEY (PAGEID) REFERENCES PAGES(ID),
  CONSTRAINT fk_persons_rank FOREIGN KEY (PERSONID) REFERENCES PERSONS(ID)
);